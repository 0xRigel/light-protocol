
signer: [127, 77, 79, 71, 235, 125, 146, 239, 135, 207, 124, 121, 52, 115, 208, 3, 205, 96, 84, 129, 130, 94, 68, 77, 196, 198, 226, 7, 192, 146, 70, 86]
ixidx: 470 (calls ix 7)
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

signer: [112, 39, 212, 226, 87, 240, 80, 131, 105, 70, 178, 237, 207, 90, 127, 65, 142, 87, 84, 42, 64, 123, 135, 103, 74, 32, 52, 164, 201, 95, 174, 242]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [192, 34, 6, 119, 72, 90, 67, 198, 30, 86, 96, 151, 96, 5, 203, 28, 204, 83, 223, 126, 71, 152, 195, 172, 52, 177, 85, 107, 40, 32, 221, 21, 46, 55, 57, 215, 203, 146, 166, 62, 197, 150, 49, 86, 173, 111, 4, 154, 142, 235, 170, 77, 184, 120, 185, 94, 248, 0, 62, 112, 28, 216, 137, 22]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [5, 238, 209, 71, 62, 89, 167, 17, 38, 179, 141, 255, 10, 243, 232, 241, 18, 48, 162, 27, 111, 217, 18, 43, 15, 212, 98, 165, 242, 92, 179, 20, 11, 249, 36, 178, 201, 145, 189, 166, 59, 221, 224, 149, 112, 64, 227, 229, 70, 15, 209, 215, 93, 137, 144, 214, 127, 219, 219, 52, 196, 219, 29, 39]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [255, 128, 209, 26, 165, 152, 56, 71, 175, 123, 111, 42, 244, 156, 5, 219, 241, 11, 57, 65, 190, 24, 241, 112, 83, 36, 146, 206, 168, 10, 59, 37, 230, 231, 85, 232, 170, 69, 206, 218, 229, 95, 190, 236, 180, 13, 224, 125, 175, 205, 168, 0, 11, 154, 10, 144, 123, 155, 121, 29, 105, 90, 43, 45, 105, 200, 225, 215, 76, 149, 6, 214, 110, 140, 3, 81, 137, 213, 2, 182, 236, 87, 219, 8, 47, 238, 119, 168, 201, 246, 123, 55, 226, 212, 115, 3, 209, 218, 19, 243, 109, 34, 15, 189, 139, 18, 19, 217, 139, 96, 114, 250, 8, 180, 117, 189, 115, 206, 176, 235, 233, 98, 116, 170, 97, 16, 124, 0, 149, 51, 133, 98, 91, 153, 16, 143, 239, 198, 147, 66, 183, 36, 61, 133, 134, 7, 153, 105, 172, 205, 128, 67, 254, 60, 106, 227, 0, 101, 152, 5, 249, 180, 126, 32, 63, 137, 156, 138, 202, 130, 159, 202, 122, 253, 120, 81, 255, 32, 250, 74, 147, 121, 53, 122, 229, 7, 4, 87, 247, 88, 57, 38]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED


// calls ix 4
signer: [125, 45, 56, 254, 131, 27, 164, 104, 100, 129, 215, 42, 31, 36, 165, 211, 136, 195, 119, 235, 27, 141, 46, 207, 180, 158, 223, 221, 247, 154, 252, 110]
ixidx: 471
frange: [250, 226, 184, 209, 104, 186, 27, 208, 209, 228, 137, 214, 5, 38, 37, 55, 105, 32, 169, 184, 3, 58, 251, 255, 123, 104, 212, 109, 197, 145, 6, 40, 145, 153, 140, 163, 89, 250, 126, 204, 146, 226, 181, 91, 203, 71, 104, 200, 245, 228, 143, 251, 132, 109, 148, 71, 13, 58, 143, 200, 35, 242, 20, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 198, 124, 46, 211, 50, 30, 116, 107, 65, 202, 242, 4, 30, 250, 66, 200, 49, 42, 165, 146, 155, 172, 155, 210, 35, 175, 40, 114, 63, 37, 20, 106, 168, 131, 121, 38, 9, 242, 26, 188, 37, 137, 48, 100, 27, 249, 175, 204, 197, 196, 63, 81, 150, 214, 118, 8, 207, 63, 110, 252, 147, 10, 20, 34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED


signer: [77, 4, 255, 102, 217, 115, 159, 202, 237, 160, 242, 147, 221, 53, 120, 241, 78, 156, 228, 196, 154, 140, 4, 151, 147, 57, 176, 98, 59, 131, 166, 248]
ixidx: 471
frange: [243, 63, 96, 97, 200, 24, 248, 239, 18, 135, 151, 114, 165, 25, 68, 117, 12, 119, 35, 114, 252, 213, 167, 170, 82, 106, 106, 13, 112, 87, 67, 10, 57, 182, 30, 118, 4, 25, 60, 155, 158, 68, 42, 217, 198, 43, 4, 2, 91, 160, 35, 215, 205, 18, 104, 225, 159, 166, 18, 119, 34, 142, 108, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 198, 124, 46, 211, 50, 30, 116, 107, 65, 202, 242, 4, 30, 250, 66, 200, 49, 42, 165, 146, 155, 172, 155, 210, 35, 175, 40, 114, 63, 37, 20, 106, 168, 131, 121, 38, 9, 242, 26, 188, 37, 137, 48, 100, 27, 249, 175, 204, 197, 196, 63, 81, 150, 214, 118, 8, 207, 63, 110, 252, 147, 10, 20, 192, 34, 6, 119, 72, 90, 67, 198, 30, 86, 96, 151, 96, 5, 203, 28, 204, 83, 223, 126, 71, 152, 195, 172, 52, 177, 85, 107, 40, 32, 221, 21, 46, 55, 57, 215, 203, 146, 166, 62, 197, 150, 49, 86, 173, 111, 4, 154, 142, 235, 170, 77, 184, 120, 185, 94, 248, 0, 62, 112, 28, 216, 137, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [192, 34, 6, 119, 72, 90, 67, 198, 30, 86, 96, 151, 96, 5, 203, 28, 204, 83, 223, 126, 71, 152, 195, 172, 52, 177, 85, 107, 40, 32, 221, 21, 46, 55, 57, 215, 203, 146, 166, 62, 197, 150, 49, 86, 173, 111, 4, 154, 142, 235, 170, 77, 184, 120, 185, 94, 248, 0, 62, 112, 28, 216, 137, 22]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [5, 238, 209, 71, 62, 89, 167, 17, 38, 179, 141, 255, 10, 243, 232, 241, 18, 48, 162, 27, 111, 217, 18, 43, 15, 212, 98, 165, 242, 92, 179, 20, 11, 249, 36, 178, 201, 145, 189, 166, 59, 221, 224, 149, 112, 64, 227, 229, 70, 15, 209, 215, 93, 137, 144, 214, 127, 219, 219, 52, 196, 219, 29, 39]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [255, 128, 209, 26, 165, 152, 56, 71, 175, 123, 111, 42, 244, 156, 5, 219, 241, 11, 57, 65, 190, 24, 241, 112, 83, 36, 146, 206, 168, 10, 59, 37, 230, 231, 85, 232, 170, 69, 206, 218, 229, 95, 190, 236, 180, 13, 224, 125, 175, 205, 168, 0, 11, 154, 10, 144, 123, 155, 121, 29, 105, 90, 43, 45, 105, 200, 225, 215, 76, 149, 6, 214, 110, 140, 3, 81, 137, 213, 2, 182, 236, 87, 219, 8, 47, 238, 119, 168, 201, 246, 123, 55, 226, 212, 115, 3, 209, 218, 19, 243, 109, 34, 15, 189, 139, 18, 19, 217, 139, 96, 114, 250, 8, 180, 117, 189, 115, 206, 176, 235, 233, 98, 116, 170, 97, 16, 124, 0, 149, 51, 133, 98, 91, 153, 16, 143, 239, 198, 147, 66, 183, 36, 61, 133, 134, 7, 153, 105, 172, 205, 128, 67, 254, 60, 106, 227, 0, 101, 152, 5, 249, 180, 126, 32, 63, 137, 156, 138, 202, 130, 159, 202, 122, 253, 120, 81, 255, 32, 250, 74, 147, 121, 53, 122, 229, 7, 4, 87, 247, 88, 57, 38]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

// ..3

signer: [56, 121, 97, 191, 83, 118, 22, 11, 235, 46, 142, 200, 217, 123, 6, 252, 114, 53, 224, 23, 202, 47, 97, 147, 70, 245, 145, 227, 87, 201, 190, 201]
ixidx: 469
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c1 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c0 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED 


signer: [92, 15, 117, 170, 7, 253, 253, 84, 117, 196, 214, 74, 220, 160, 212, 241, 142, 75, 138, 191, 186, 94, 86, 129, 87, 165, 73, 9, 133, 219, 169, 14]
ixidx: 469
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c1 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c0 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]

r: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 145, 59, 234, 52, 7, 237, 211, 57, 249, 58, 66, 72, 87, 97, 31, 203, 95, 229, 33, 105, 210, 237, 169, 242, 243, 244, 158, 176, 32, 245, 10]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new



// running bpf after cargo clean (3)
signer: [135, 184, 232, 65, 137, 5, 197, 74, 70, 75, 15, 11, 159, 8, 238, 199, 211, 237, 243, 37, 70, 121, 114, 77, 121, 24, 86, 141, 116, 227, 158, 239]
ixidx: 469
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c1 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c0 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 145, 59, 234, 52, 7, 237, 211, 57, 249, 58, 66, 72, 87, 97, 31, 203, 95, 229, 33, 105, 210, 237, 169, 242, 243, 244, 158, 176, 32, 245, 10]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED


ill default to this keypair (override with --program-id):
  /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core-keypair.json
Running: /home/swen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml ml_test_onchain_new -- --nocapture

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s





running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [99, 134, 234, 199, 244, 45, 11, 51, 178, 96, 244, 243, 222, 233, 108, 243, 16, 151, 35, 150, 248, 51, 3, 178, 143, 141, 238, 26, 241, 122, 124, 154]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [192, 34, 6, 119, 72, 90, 67, 198, 30, 86, 96, 151, 96, 5, 203, 28, 204, 83, 223, 126, 71, 152, 195, 172, 52, 177, 85, 107, 40, 32, 221, 21, 46, 55, 57, 215, 203, 146, 166, 62, 197, 150, 49, 86, 173, 111, 4, 154, 142, 235, 170, 77, 184, 120, 185, 94, 248, 0, 62, 112, 28, 216, 137, 22]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [5, 238, 209, 71, 62, 89, 167, 17, 38, 179, 141, 255, 10, 243, 232, 241, 18, 48, 162, 27, 111, 217, 18, 43, 15, 212, 98, 165, 242, 92, 179, 20, 11, 249, 36, 178, 201, 145, 189, 166, 59, 221, 224, 149, 112, 64, 227, 229, 70, 15, 209, 215, 93, 137, 144, 214, 127, 219, 219, 52, 196, 219, 29, 39]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [255, 128, 209, 26, 165, 152, 56, 71, 175, 123, 111, 42, 244, 156, 5, 219, 241, 11, 57, 65, 190, 24, 241, 112, 83, 36, 146, 206, 168, 10, 59, 37, 230, 231, 85, 232, 170, 69, 206, 218, 229, 95, 190, 236, 180, 13, 224, 125, 175, 205, 168, 0, 11, 154, 10, 144, 123, 155, 121, 29, 105, 90, 43, 45, 105, 200, 225, 215, 76, 149, 6, 214, 110, 140, 3, 81, 137, 213, 2, 182, 236, 87, 219, 8, 47, 238, 119, 168, 201, 246, 123, 55, 226, 212, 115, 3, 209, 218, 19, 243, 109, 34, 15, 189, 139, 18, 19, 217, 139, 96, 114, 250, 8, 180, 117, 189, 115, 206, 176, 235, 233, 98, 116, 170, 97, 16, 124, 0, 149, 51, 133, 98, 91, 153, 16, 143, 239, 198, 147, 66, 183, 36, 61, 133, 134, 7, 153, 105, 172, 205, 128, 67, 254, 60, 106, 227, 0, 101, 152, 5, 249, 180, 126, 32, 63, 137, 156, 138, 202, 130, 159, 202, 122, 253, 120, 81, 255, 32, 250, 74, 147, 121, 53, 122, 229, 7, 4, 87, 247, 88, 57, 38]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.32s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [227, 73, 49, 21, 218, 182, 113, 186, 169, 141, 219, 219, 101, 80, 169, 171, 189, 237, 5, 149, 132, 214, 77, 90, 203, 20, 114, 90, 109, 136, 166, 54]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.32s

Running: cargo-build-bpf --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml --bpf-out-dir /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy
BPF SDK: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: cargo +bpf build --target bpfel-unknown-unknown --release
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/llvm-readelf --dyn-symbols /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so

To deploy this program:
  $ solana program deploy /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
The program address will default to this keypair (override with --program-id):
  /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core-keypair.json
Running: /home/swen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml ml_test_onchain_new -- --nocapture

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [108, 65, 125, 143, 59, 26, 193, 53, 101, 68, 81, 37, 13, 64, 69, 89, 130, 54, 167, 226, 164, 110, 116, 166, 249, 23, 35, 48, 247, 239, 151, 140]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [192, 34, 6, 119, 72, 90, 67, 198, 30, 86, 96, 151, 96, 5, 203, 28, 204, 83, 223, 126, 71, 152, 195, 172, 52, 177, 85, 107, 40, 32, 221, 21, 46, 55, 57, 215, 203, 146, 166, 62, 197, 150, 49, 86, 173, 111, 4, 154, 142, 235, 170, 77, 184, 120, 185, 94, 248, 0, 62, 112, 28, 216, 137, 22]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [5, 238, 209, 71, 62, 89, 167, 17, 38, 179, 141, 255, 10, 243, 232, 241, 18, 48, 162, 27, 111, 217, 18, 43, 15, 212, 98, 165, 242, 92, 179, 20, 11, 249, 36, 178, 201, 145, 189, 166, 59, 221, 224, 149, 112, 64, 227, 229, 70, 15, 209, 215, 93, 137, 144, 214, 127, 219, 219, 52, 196, 219, 29, 39]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [255, 128, 209, 26, 165, 152, 56, 71, 175, 123, 111, 42, 244, 156, 5, 219, 241, 11, 57, 65, 190, 24, 241, 112, 83, 36, 146, 206, 168, 10, 59, 37, 230, 231, 85, 232, 170, 69, 206, 218, 229, 95, 190, 236, 180, 13, 224, 125, 175, 205, 168, 0, 11, 154, 10, 144, 123, 155, 121, 29, 105, 90, 43, 45, 105, 200, 225, 215, 76, 149, 6, 214, 110, 140, 3, 81, 137, 213, 2, 182, 236, 87, 219, 8, 47, 238, 119, 168, 201, 246, 123, 55, 226, 212, 115, 3, 209, 218, 19, 243, 109, 34, 15, 189, 139, 18, 19, 217, 139, 96, 114, 250, 8, 180, 117, 189, 115, 206, 176, 235, 233, 98, 116, 170, 97, 16, 124, 0, 149, 51, 133, 98, 91, 153, 16, 143, 239, 198, 147, 66, 183, 36, 61, 133, 134, 7, 153, 105, 172, 205, 128, 67, 254, 60, 106, 227, 0, 101, 152, 5, 249, 180, 126, 32, 63, 137, 156, 138, 202, 130, 159, 202, 122, 253, 120, 81, 255, 32, 250, 74, 147, 121, 53, 122, 229, 7, 4, 87, 247, 88, 57, 38]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.40s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [123, 64, 32, 251, 43, 234, 143, 152, 236, 156, 0, 142, 194, 4, 130, 41, 28, 211, 129, 164, 33, 162, 48, 6, 206, 172, 110, 245, 208, 2, 37, 62]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.33s



///////////////////////////////7


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [231, 61, 239, 20, 120, 126, 150, 237, 201, 157, 8, 15, 136, 72, 64, 31, 189, 51, 97, 5, 140, 7, 163, 23, 28, 220, 110, 182, 57, 102, 243, 27]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.32s

Running: cargo-build-bpf --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml --bpf-out-dir /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy
BPF SDK: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: cargo +bpf build --target bpfel-unknown-unknown --release
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/scripts/strip.sh /home/swen/Desktop/crypto/light-protocol-onchain/program/target/bpfel-unknown-unknown/release/light_protocol_core.so /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/llvm-readelf --dyn-symbols /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so

To deploy this program:
  $ solana program deploy /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
The program address will default to this keypair (override with --program-id):
  /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core-keypair.json
Running: /home/swen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml ml_test_onchain_new -- --nocapture

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [183, 189, 194, 12, 53, 58, 210, 57, 134, 196, 122, 19, 97, 206, 51, 224, 11, 163, 228, 98, 236, 235, 51, 226, 37, 118, 98, 242, 158, 79, 1, 173]
ixidx: 469
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c1 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c0 range: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.32s

Running: cargo-build-bpf --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml --bpf-out-dir /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy
BPF SDK: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: cargo +bpf build --target bpfel-unknown-unknown --release
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/scripts/strip.sh /home/swen/Desktop/crypto/light-protocol-onchain/program/target/bpfel-unknown-unknown/release/light_protocol_core.so /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/llvm-readelf --dyn-symbols /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so

To deploy this program:
  $ solana program deploy /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
The program address will default to this keypair (override with --program-id):
  /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core-keypair.json
Running: /home/swen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml ml_test_onchain_new -- --nocapture

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [90, 59, 112, 134, 167, 31, 37, 163, 29, 99, 108, 155, 132, 249, 212, 175, 232, 131, 247, 170, 189, 20, 153, 137, 59, 130, 139, 194, 25, 224, 184, 29]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.57s

Running: cargo-build-bpf --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml --bpf-out-dir /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy
BPF SDK: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: cargo +bpf build --target bpfel-unknown-unknown --release
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/scripts/strip.sh /home/swen/Desktop/crypto/light-protocol-onchain/program/target/bpfel-unknown-unknown/release/light_protocol_core.so /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
Running: /home/swen/.local/share/solana/install/releases/1.7.12/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/llvm-readelf --dyn-symbols /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so

To deploy this program:
  $ solana program deploy /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core.so
The program address will default to this keypair (override with --program-id):
  /home/swen/Desktop/crypto/light-protocol-onchain/program/target/deploy/light_protocol_core-keypair.json
Running: /home/swen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /home/swen/Desktop/crypto/light-protocol-onchain/program/Cargo.toml ml_test_onchain_new -- --nocapture

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.01s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [118, 224, 180, 141, 56, 21, 78, 65, 4, 170, 184, 224, 139, 240, 94, 17, 240, 248, 98, 158, 17, 111, 12, 96, 46, 120, 160, 91, 17, 233, 250, 198]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.54s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 21 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.00s


running 1 test
[0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 174, 226, 37, 211, 160, 187, 178, 149, 82, 17, 60, 110, 116, 28, 61, 58, 145, 58, 71, 25, 42, 67, 46, 189, 214, 248, 234, 182, 251, 238, 34, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 79, 191, 68, 231, 130, 54, 168, 60, 248, 47, 244, 141, 167, 222, 198, 96, 50, 170, 17, 40, 13, 1, 245, 115, 142, 214, 90, 99, 229, 187, 22, 67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38, 172, 142, 232, 220, 220, 50, 182, 187, 239, 181, 222, 63, 50, 88, 102, 199, 62, 207, 211, 234, 214, 5, 220, 187, 24, 86, 220, 147, 164, 186, 251, 9, 28, 7, 117, 185, 154, 43, 169, 77, 68, 134, 104, 109, 213, 192, 99, 26, 121, 117, 54, 210, 207, 34, 85, 108, 250, 86, 7, 159, 138, 7, 193, 45, 98, 205, 83, 242, 10, 31, 104, 249, 165, 124, 177, 22, 234, 65, 178, 65, 243, 35, 99, 107, 70, 239, 15, 189, 110, 44, 35, 254, 45, 58, 69, 1, 138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10, 168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12, 186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41, 123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26, 252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
storage_pubkey add seed: [[67, 65, 69, 148, 186, 78, 34, 24, 108, 227, 15, 182, 67, 214, 217, 243, 234, 37, 137, 100, 23, 87, 254, 17, 221, 100, 61, 250, 203, 20, 116, 38], [115, 116, 111, 114, 97, 103, 101]]
initial g_ic: GroupProjective { x: Fp256(BigInteger256([1066727571854014131, 12441028284001198887, 13384027390696184766, 2208197633686406652])), y: Fp256(BigInteger256([9330012877489461198, 17502195030746717405, 14803056417701887008, 322308098704544156])), z: Fp256(BigInteger256([15230403791020821917, 754611498739239741, 7381016538464732716, 1011752739694698287])) }
i_current: Fp256(BigInteger256([1062297621665128128, 2166017856262331820, 10188889094056428183, 354788308188142770]))
x_current: GroupAffine { x: Fp256(BigInteger256([15096305088613038041, 15450916936429664742, 7012240460884899246, 92513671536051841])), y: Fp256(BigInteger256([10862194231830853264, 11056503687343061069, 12290720852439755401, 459342416520978194])), infinity: false }
i_current: Fp256(BigInteger256([14309344807044505379, 11594881257807494484, 13211743641362460121, 1823190300859294171]))
x_current: GroupAffine { x: Fp256(BigInteger256([15641644508138297079, 9041321002551705920, 15800807934332706761, 2656166353491503414])), y: Fp256(BigInteger256([16268602035483486825, 10972259957439130024, 9623762579438884381, 2012664647234000075])), infinity: false }
i_current: Fp256(BigInteger256([7499642835116024487, 13645547438798822342, 8888810613766603773, 893946081800554843]))
x_current: GroupAffine { x: Fp256(BigInteger256([8692429926662127593, 10935535300992320083, 9787298698866778316, 1975884577793139361])), y: Fp256(BigInteger256([10120282717069195739, 2924651772574208664, 16355418730909155077, 1971857561760981895])), infinity: false }
i_current: Fp256(BigInteger256([6790344608312693753, 4230561713051428269, 5529921795607706967, 3306026084519024911]))
x_current: GroupAffine { x: Fp256(BigInteger256([10144044385156409655, 610303884894678897, 9223997014402146128, 509492180233071587])), y: Fp256(BigInteger256([10996773709255984240, 13514726858264744480, 4671917309208571268, 1887003877686392772])), infinity: false }
i_current: Fp256(BigInteger256([2283689059496864544, 18209079467298555554, 16471183611320666325, 2211589408264550198]))
x_current: GroupAffine { x: Fp256(BigInteger256([16437579820482701014, 7600137282207214753, 15411185132147219912, 3201153759406335437])), y: Fp256(BigInteger256([2017090504016175258, 7162404748314854399, 11499298508078865969, 2757817966897549870])), infinity: false }
i_current: Fp256(BigInteger256([11531002702162116546, 3375352171222897890, 12779115370717479844, 2151342547941188072]))
x_current: GroupAffine { x: Fp256(BigInteger256([14057919031671944666, 14203845255446805835, 9015258206618143795, 964845734187903972])), y: Fp256(BigInteger256([5791413923656349836, 17403608054330843338, 2071208950826848467, 1879590606605722516])), infinity: false }
i_current: Fp256(BigInteger256([1412497063544417357, 3637757864703789576, 11100644877341834217, 2319338597351131165]))
x_current: GroupAffine { x: Fp256(BigInteger256([1881165474423442217, 4233378363008024081, 5658078745662843270, 3270044658850523312])), y: Fp256(BigInteger256([8269266514865638031, 15906990907728944814, 12488463804295023706, 2788653403667020252])), infinity: false }
affine bytes: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11, 98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
added account J5ms7MWiWntgkbPQCgn2DVSmy5RAniov1kuezeCsVFCW
...after first prgm start var
signer: [168, 214, 254, 249, 213, 180, 183, 123, 67, 69, 136, 138, 76, 99, 182, 52, 191, 68, 20, 119, 116, 247, 36, 181, 137, 251, 200, 106, 73, 124, 49, 197]
ixidx: 470
frange: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
c2 range: [34, 2, 221, 155, 16, 157, 118, 72, 38, 91, 113, 148, 57, 233, 66, 101, 99, 176, 100, 122, 98, 176, 5, 241, 121, 105, 218, 191, 110, 51, 5, 27, 186, 251, 27, 27, 161, 39, 28, 250, 222, 106, 100, 39, 33, 253, 23, 140, 231, 175, 38, 124, 255, 66, 72, 3, 182, 203, 97, 69, 236, 233, 12, 0]
c1 range: [97, 9, 87, 83, 21, 124, 168, 134, 176, 225, 26, 66, 244, 200, 12, 176, 29, 168, 235, 199, 82, 63, 107, 92, 183, 95, 67, 130, 1, 109, 216, 7, 213, 210, 199, 60, 13, 8, 74, 226, 209, 233, 238, 130, 39, 101, 62, 76, 82, 81, 66, 225, 44, 154, 84, 215, 206, 40, 103, 129, 165, 247, 228, 10]
c0 range: [182, 188, 167, 251, 200, 249, 159, 96, 48, 194, 102, 103, 153, 56, 83, 88, 72, 15, 104, 220, 123, 59, 86, 50, 224, 19, 63, 4, 226, 231, 91, 4, 118, 241, 161, 161, 86, 82, 27, 220, 14, 8, 192, 220, 181, 188, 86, 199, 214, 153, 69, 22, 218, 215, 229, 183, 20, 13, 195, 73, 39, 199, 35, 14]
p1x : [138, 164, 60, 35, 40, 73, 189, 203, 190, 174, 30, 45, 108, 176, 99, 70, 0, 150, 137, 69, 178, 91, 43, 15, 183, 104, 229, 188, 225, 234, 242, 10]
p1y  [168, 203, 114, 118, 129, 122, 58, 53, 241, 203, 93, 141, 171, 89, 125, 114, 36, 198, 28, 245, 154, 231, 191, 254, 34, 62, 192, 208, 48, 100, 141, 12]
p2x: [198, 55, 96, 164, 198, 225, 73, 58, 132, 115, 254, 217, 20, 64, 43, 77, 79, 223, 126, 148, 251, 179, 122, 93, 52, 97, 96, 67, 95, 64, 210, 11]
p2y: [98, 220, 143, 21, 240, 104, 107, 163, 224, 56, 230, 34, 252, 6, 30, 88, 217, 31, 99, 106, 250, 65, 122, 203, 142, 165, 166, 194, 60, 151, 243, 23]
p3x: [123, 29, 218, 233, 30, 201, 247, 37, 43, 21, 230, 167, 149, 26, 34, 127, 174, 120, 43, 51, 172, 75, 59, 10, 180, 177, 161, 23, 50, 208, 79, 26]
p3y: [252, 160, 230, 107, 134, 186, 208, 245, 11, 129, 158, 79, 178, 1, 9, 176, 64, 227, 116, 99, 223, 40, 91, 198, 24, 206, 146, 41, 255, 225, 16, 24]
r: [27, 32, 130, 153, 164, 78, 78, 4, 33, 233, 125, 64, 1, 241, 223, 134, 54, 105, 147, 219, 183, 5, 53, 119, 179, 110, 192, 197, 243, 92, 155, 42, 132, 255, 5, 0, 147, 9, 130, 58, 51, 181, 78, 133, 232, 130, 87, 244, 235, 88, 194, 172, 159, 50, 214, 66, 112, 185, 198, 233, 97, 78, 202, 17, 156, 147, 187, 38, 55, 217, 255, 242, 86, 244, 119, 112, 50, 234, 111, 128, 187, 120, 4, 98, 250, 100, 255, 33, 26, 231, 9, 182, 84, 189, 196, 12, 76, 70, 92, 82, 10, 119, 51, 133, 43, 158, 133, 96, 106, 3, 56, 95, 61, 160, 117, 60, 251, 87, 82, 126, 149, 223, 140, 105, 139, 188, 147, 8, 137, 197, 248, 184, 15, 213, 158, 110, 117, 4, 190, 82, 252, 73, 25, 196, 27, 217, 177, 106, 148, 142, 84, 217, 70, 109, 34, 140, 213, 109, 128, 6, 8, 92, 19, 62, 241, 157, 24, 142, 213, 176, 61, 93, 193, 113, 100, 76, 252, 245, 62, 38, 182, 178, 206, 45, 90, 128, 44, 239, 38, 238, 52, 14]
proofb: [186, 230, 95, 70, 203, 113, 162, 36, 217, 8, 154, 95, 46, 198, 140, 193, 130, 152, 0, 90, 182, 159, 54, 82, 208, 105, 150, 75, 244, 141, 243, 23, 207, 16, 199, 194, 54, 135, 244, 2, 11, 73, 248, 58, 17, 136, 249, 255, 39, 58, 165, 16, 175, 227, 150, 231, 14, 187, 47, 35, 55, 147, 101, 12, 236, 30, 169, 90, 50, 143, 208, 11, 117, 105, 190, 180, 68, 206, 87, 107, 185, 80, 77, 147, 248, 39, 37, 159, 57, 22, 18, 223, 129, 90, 54, 46, 140, 4, 172, 135, 235, 226, 18, 206, 133, 198, 17, 122, 54, 12, 214, 51, 114, 139, 94, 118, 201, 89, 93, 92, 159, 25, 80, 60, 223, 106, 82, 41]
currentc2r: [0]
currentc3r: [0]
test ml_test_onchain_new ... FAILED

failures:

failures:
    ml_test_onchain_new

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.30s

